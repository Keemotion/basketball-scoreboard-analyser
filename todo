DisplayTree.prototype.loadSubComponents
    on removal of items -> clear getSelected()
    event notification for canvas?
    recursively update/add elements, but don't replace them unless stateChangedEvent indicated so
DisplayTree.prototype.stateChanged
    StateChangedEvent -> parameter for update or remake. on update
        


optimize exporter (group settings)
configuration keys in UI
TO ASK: 
    default configuration keys?
    objects grouped meaningfully vs optimally (for keys)
x export last number for digits
x other color for current selected digit/group
show configuration values
display pattern functions 
optimize: minimize number of lines
configuration keys after the definition (digits/leds)
x move whole digit at once
move whole group of leds at once
x select a set of groups and move it at once
selecting by square selection + selecting/deselecting by shift+click
debug: add digit for new configuration

x default: don't display green circles, only when working on that one (selected digits: all info)
x selecting by clicking inside the digit

mouse pointer change: over edge -> move digit, on corner -> move corner, else: drag canvas

hovering in toggle mode for patterns -> display RGB/grayscale values of current pixel

validate JS-code

-------
automisation
------
select starting and end led -> auto find all leds in between by equal-spacing (not recognizing)
find center of led by recognizing

first try digit recognizing: 
    maximize variance in luminance by shearing -> greedy
second try: (if no success)
    Fast Fourier/..?
